// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.15.6
// source: PerimeterX.proto

package perimeterx

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SITE int32

const (
	SITE_WALMART SITE = 0
	SITE_HIBBET  SITE = 1
	SITE_SSENSE  SITE = 2
	SITE_SNIPES  SITE = 3
	SITE_ONYGO   SITE = 4
	SITE_SOLEBOX SITE = 5
)

// Enum value maps for SITE.
var (
	SITE_name = map[int32]string{
		0: "WALMART",
		1: "HIBBET",
		2: "SSENSE",
		3: "SNIPES",
		4: "ONYGO",
		5: "SOLEBOX",
	}
	SITE_value = map[string]int32{
		"WALMART": 0,
		"HIBBET":  1,
		"SSENSE":  2,
		"SNIPES":  3,
		"ONYGO":   4,
		"SOLEBOX": 5,
	}
)

func (x SITE) Enum() *SITE {
	p := new(SITE)
	*p = x
	return p
}

func (x SITE) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SITE) Descriptor() protoreflect.EnumDescriptor {
	return file_PerimeterX_proto_enumTypes[0].Descriptor()
}

func (SITE) Type() protoreflect.EnumType {
	return &file_PerimeterX_proto_enumTypes[0]
}

func (x SITE) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SITE.Descriptor instead.
func (SITE) EnumDescriptor() ([]byte, []int) {
	return file_PerimeterX_proto_rawDescGZIP(), []int{0}
}

type PXType int32

const (
	PXType_PX3      PXType = 0
	PXType_PX4      PXType = 1
	PXType_EVENT    PXType = 2
	PXType_MOE      PXType = 3
	PXType_MME      PXType = 4
	PXType_RE       PXType = 5
	PXType_UAE      PXType = 6
	PXType_BRE      PXType = 7
	PXType_HCAPLOW  PXType = 8
	PXType_HCAPHIGH PXType = 9
	PXType_RECAP    PXType = 10
	PXType_PX34     PXType = 11
)

// Enum value maps for PXType.
var (
	PXType_name = map[int32]string{
		0:  "PX3",
		1:  "PX4",
		2:  "EVENT",
		3:  "MOE",
		4:  "MME",
		5:  "RE",
		6:  "UAE",
		7:  "BRE",
		8:  "HCAPLOW",
		9:  "HCAPHIGH",
		10: "RECAP",
		11: "PX34",
	}
	PXType_value = map[string]int32{
		"PX3":      0,
		"PX4":      1,
		"EVENT":    2,
		"MOE":      3,
		"MME":      4,
		"RE":       5,
		"UAE":      6,
		"BRE":      7,
		"HCAPLOW":  8,
		"HCAPHIGH": 9,
		"RECAP":    10,
		"PX34":     11,
	}
)

func (x PXType) Enum() *PXType {
	p := new(PXType)
	*p = x
	return p
}

func (x PXType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PXType) Descriptor() protoreflect.EnumDescriptor {
	return file_PerimeterX_proto_enumTypes[1].Descriptor()
}

func (PXType) Type() protoreflect.EnumType {
	return &file_PerimeterX_proto_enumTypes[1]
}

func (x PXType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PXType.Descriptor instead.
func (PXType) EnumDescriptor() ([]byte, []int) {
	return file_PerimeterX_proto_rawDescGZIP(), []int{1}
}

type Payload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value string  `protobuf:"bytes,1,opt,name=Value,proto3" json:"Value,omitempty"`
	AppID string  `protobuf:"bytes,2,opt,name=AppID,proto3" json:"AppID,omitempty"`
	Tag   string  `protobuf:"bytes,3,opt,name=Tag,proto3" json:"Tag,omitempty"`
	UUID  string  `protobuf:"bytes,4,opt,name=UUID,proto3" json:"UUID,omitempty"`
	FT    string  `protobuf:"bytes,5,opt,name=FT,proto3" json:"FT,omitempty"`
	SEQ   string  `protobuf:"bytes,6,opt,name=SEQ,proto3" json:"SEQ,omitempty"`
	EN    string  `protobuf:"bytes,7,opt,name=EN,proto3" json:"EN,omitempty"`
	PC    string  `protobuf:"bytes,8,opt,name=PC,proto3" json:"PC,omitempty"`
	CS    *string `protobuf:"bytes,9,opt,name=CS,proto3,oneof" json:"CS,omitempty"`
	SID   *string `protobuf:"bytes,10,opt,name=SID,proto3,oneof" json:"SID,omitempty"`
	VID   *string `protobuf:"bytes,11,opt,name=VID,proto3,oneof" json:"VID,omitempty"`
	RSC   *int32  `protobuf:"varint,12,opt,name=RSC,proto3,oneof" json:"RSC,omitempty"`
	PXHD  *string `protobuf:"bytes,13,opt,name=PXHD,proto3,oneof" json:"PXHD,omitempty"`
	Ua    string  `protobuf:"bytes,14,opt,name=Ua,proto3" json:"Ua,omitempty"`
}

func (x *Payload) Reset() {
	*x = Payload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_PerimeterX_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Payload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Payload) ProtoMessage() {}

func (x *Payload) ProtoReflect() protoreflect.Message {
	mi := &file_PerimeterX_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Payload.ProtoReflect.Descriptor instead.
func (*Payload) Descriptor() ([]byte, []int) {
	return file_PerimeterX_proto_rawDescGZIP(), []int{0}
}

func (x *Payload) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *Payload) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *Payload) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

func (x *Payload) GetUUID() string {
	if x != nil {
		return x.UUID
	}
	return ""
}

func (x *Payload) GetFT() string {
	if x != nil {
		return x.FT
	}
	return ""
}

func (x *Payload) GetSEQ() string {
	if x != nil {
		return x.SEQ
	}
	return ""
}

func (x *Payload) GetEN() string {
	if x != nil {
		return x.EN
	}
	return ""
}

func (x *Payload) GetPC() string {
	if x != nil {
		return x.PC
	}
	return ""
}

func (x *Payload) GetCS() string {
	if x != nil && x.CS != nil {
		return *x.CS
	}
	return ""
}

func (x *Payload) GetSID() string {
	if x != nil && x.SID != nil {
		return *x.SID
	}
	return ""
}

func (x *Payload) GetVID() string {
	if x != nil && x.VID != nil {
		return *x.VID
	}
	return ""
}

func (x *Payload) GetRSC() int32 {
	if x != nil && x.RSC != nil {
		return *x.RSC
	}
	return 0
}

func (x *Payload) GetPXHD() string {
	if x != nil && x.PXHD != nil {
		return *x.PXHD
	}
	return ""
}

func (x *Payload) GetUa() string {
	if x != nil {
		return x.Ua
	}
	return ""
}

type PX2Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Site      SITE    `protobuf:"varint,1,opt,name=Site,proto3,enum=perimeterx.SITE" json:"Site,omitempty"`
	UserAgent *string `protobuf:"bytes,2,opt,name=UserAgent,proto3,oneof" json:"UserAgent,omitempty"`
}

func (x *PX2Request) Reset() {
	*x = PX2Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_PerimeterX_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PX2Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PX2Request) ProtoMessage() {}

func (x *PX2Request) ProtoReflect() protoreflect.Message {
	mi := &file_PerimeterX_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PX2Request.ProtoReflect.Descriptor instead.
func (*PX2Request) Descriptor() ([]byte, []int) {
	return file_PerimeterX_proto_rawDescGZIP(), []int{1}
}

func (x *PX2Request) GetSite() SITE {
	if x != nil {
		return x.Site
	}
	return SITE_WALMART
}

func (x *PX2Request) GetUserAgent() string {
	if x != nil && x.UserAgent != nil {
		return *x.UserAgent
	}
	return ""
}

type PXRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Site           SITE    `protobuf:"varint,1,opt,name=Site,proto3,enum=perimeterx.SITE" json:"Site,omitempty"`
	Type           PXType  `protobuf:"varint,2,opt,name=Type,proto3,enum=perimeterx.PXType" json:"Type,omitempty"`
	VarObject      string  `protobuf:"bytes,3,opt,name=VarObject,proto3" json:"VarObject,omitempty"`
	Version        string  `protobuf:"bytes,4,opt,name=Version,proto3" json:"Version,omitempty"`
	Tag            string  `protobuf:"bytes,5,opt,name=Tag,proto3" json:"Tag,omitempty"`
	UA             string  `protobuf:"bytes,6,opt,name=UA,proto3" json:"UA,omitempty"`
	Count          string  `protobuf:"bytes,7,opt,name=Count,proto3" json:"Count,omitempty"`
	UUID           string  `protobuf:"bytes,8,opt,name=UUID,proto3" json:"UUID,omitempty"`
	SID            *string `protobuf:"bytes,9,opt,name=SID,proto3,oneof" json:"SID,omitempty"`
	VID            string  `protobuf:"bytes,10,opt,name=VID,proto3" json:"VID,omitempty"`
	CS             string  `protobuf:"bytes,11,opt,name=CS,proto3" json:"CS,omitempty"`
	PXHD           *string `protobuf:"bytes,12,opt,name=PXHD,proto3,oneof" json:"PXHD,omitempty"`
	RecaptchaToken *string `protobuf:"bytes,13,opt,name=RecaptchaToken,proto3,oneof" json:"RecaptchaToken,omitempty"`
}

func (x *PXRequest) Reset() {
	*x = PXRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_PerimeterX_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PXRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PXRequest) ProtoMessage() {}

func (x *PXRequest) ProtoReflect() protoreflect.Message {
	mi := &file_PerimeterX_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PXRequest.ProtoReflect.Descriptor instead.
func (*PXRequest) Descriptor() ([]byte, []int) {
	return file_PerimeterX_proto_rawDescGZIP(), []int{2}
}

func (x *PXRequest) GetSite() SITE {
	if x != nil {
		return x.Site
	}
	return SITE_WALMART
}

func (x *PXRequest) GetType() PXType {
	if x != nil {
		return x.Type
	}
	return PXType_PX3
}

func (x *PXRequest) GetVarObject() string {
	if x != nil {
		return x.VarObject
	}
	return ""
}

func (x *PXRequest) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *PXRequest) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

func (x *PXRequest) GetUA() string {
	if x != nil {
		return x.UA
	}
	return ""
}

func (x *PXRequest) GetCount() string {
	if x != nil {
		return x.Count
	}
	return ""
}

func (x *PXRequest) GetUUID() string {
	if x != nil {
		return x.UUID
	}
	return ""
}

func (x *PXRequest) GetSID() string {
	if x != nil && x.SID != nil {
		return *x.SID
	}
	return ""
}

func (x *PXRequest) GetVID() string {
	if x != nil {
		return x.VID
	}
	return ""
}

func (x *PXRequest) GetCS() string {
	if x != nil {
		return x.CS
	}
	return ""
}

func (x *PXRequest) GetPXHD() string {
	if x != nil && x.PXHD != nil {
		return *x.PXHD
	}
	return ""
}

func (x *PXRequest) GetRecaptchaToken() string {
	if x != nil && x.RecaptchaToken != nil {
		return *x.RecaptchaToken
	}
	return ""
}

var File_PerimeterX_proto protoreflect.FileDescriptor

var file_PerimeterX_proto_rawDesc = []byte{
	0x0a, 0x10, 0x50, 0x65, 0x72, 0x69, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x58, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x0a, 0x70, 0x65, 0x72, 0x69, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x78, 0x22, 0xc8,
	0x02, 0x0a, 0x07, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x12, 0x10, 0x0a, 0x03, 0x54, 0x61, 0x67, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x54, 0x61, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x55, 0x55, 0x49, 0x44,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x55, 0x55, 0x49, 0x44, 0x12, 0x0e, 0x0a, 0x02,
	0x46, 0x54, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x46, 0x54, 0x12, 0x10, 0x0a, 0x03,
	0x53, 0x45, 0x51, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x53, 0x45, 0x51, 0x12, 0x0e,
	0x0a, 0x02, 0x45, 0x4e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x45, 0x4e, 0x12, 0x0e,
	0x0a, 0x02, 0x50, 0x43, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x50, 0x43, 0x12, 0x13,
	0x0a, 0x02, 0x43, 0x53, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x02, 0x43, 0x53,
	0x88, 0x01, 0x01, 0x12, 0x15, 0x0a, 0x03, 0x53, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x01, 0x52, 0x03, 0x53, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x15, 0x0a, 0x03, 0x56, 0x49,
	0x44, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x03, 0x56, 0x49, 0x44, 0x88, 0x01,
	0x01, 0x12, 0x15, 0x0a, 0x03, 0x52, 0x53, 0x43, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x48, 0x03,
	0x52, 0x03, 0x52, 0x53, 0x43, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x50, 0x58, 0x48, 0x44,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x48, 0x04, 0x52, 0x04, 0x50, 0x58, 0x48, 0x44, 0x88, 0x01,
	0x01, 0x12, 0x0e, 0x0a, 0x02, 0x55, 0x61, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x55,
	0x61, 0x42, 0x05, 0x0a, 0x03, 0x5f, 0x43, 0x53, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x53, 0x49, 0x44,
	0x42, 0x06, 0x0a, 0x04, 0x5f, 0x56, 0x49, 0x44, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x52, 0x53, 0x43,
	0x42, 0x07, 0x0a, 0x05, 0x5f, 0x50, 0x58, 0x48, 0x44, 0x22, 0x63, 0x0a, 0x0a, 0x50, 0x58, 0x32,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x04, 0x53, 0x69, 0x74, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x70, 0x65, 0x72, 0x69, 0x6d, 0x65, 0x74, 0x65,
	0x72, 0x78, 0x2e, 0x53, 0x49, 0x54, 0x45, 0x52, 0x04, 0x53, 0x69, 0x74, 0x65, 0x12, 0x21, 0x0a,
	0x09, 0x55, 0x73, 0x65, 0x72, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x00, 0x52, 0x09, 0x55, 0x73, 0x65, 0x72, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x88, 0x01, 0x01,
	0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x55, 0x73, 0x65, 0x72, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x22, 0x80,
	0x03, 0x0a, 0x09, 0x50, 0x58, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x04,
	0x53, 0x69, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x70, 0x65, 0x72,
	0x69, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x78, 0x2e, 0x53, 0x49, 0x54, 0x45, 0x52, 0x04, 0x53, 0x69,
	0x74, 0x65, 0x12, 0x26, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x12, 0x2e, 0x70, 0x65, 0x72, 0x69, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x78, 0x2e, 0x50, 0x58,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x56, 0x61,
	0x72, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x56,
	0x61, 0x72, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x54, 0x61, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x54, 0x61, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x55, 0x41, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x55, 0x41, 0x12, 0x14, 0x0a, 0x05, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x55, 0x55,
	0x49, 0x44, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x55, 0x55, 0x49, 0x44, 0x12, 0x15,
	0x0a, 0x03, 0x53, 0x49, 0x44, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x03, 0x53,
	0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x10, 0x0a, 0x03, 0x56, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x56, 0x49, 0x44, 0x12, 0x0e, 0x0a, 0x02, 0x43, 0x53, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x43, 0x53, 0x12, 0x17, 0x0a, 0x04, 0x50, 0x58, 0x48, 0x44, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x04, 0x50, 0x58, 0x48, 0x44, 0x88, 0x01, 0x01,
	0x12, 0x2b, 0x0a, 0x0e, 0x52, 0x65, 0x63, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x0e, 0x52, 0x65, 0x63, 0x61,
	0x70, 0x74, 0x63, 0x68, 0x61, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x88, 0x01, 0x01, 0x42, 0x06, 0x0a,
	0x04, 0x5f, 0x53, 0x49, 0x44, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x50, 0x58, 0x48, 0x44, 0x42, 0x11,
	0x0a, 0x0f, 0x5f, 0x52, 0x65, 0x63, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x2a, 0x4f, 0x0a, 0x04, 0x53, 0x49, 0x54, 0x45, 0x12, 0x0b, 0x0a, 0x07, 0x57, 0x41, 0x4c,
	0x4d, 0x41, 0x52, 0x54, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x48, 0x49, 0x42, 0x42, 0x45, 0x54,
	0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x53, 0x45, 0x4e, 0x53, 0x45, 0x10, 0x02, 0x12, 0x0a,
	0x0a, 0x06, 0x53, 0x4e, 0x49, 0x50, 0x45, 0x53, 0x10, 0x03, 0x12, 0x09, 0x0a, 0x05, 0x4f, 0x4e,
	0x59, 0x47, 0x4f, 0x10, 0x04, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x4f, 0x4c, 0x45, 0x42, 0x4f, 0x58,
	0x10, 0x05, 0x2a, 0x81, 0x01, 0x0a, 0x06, 0x50, 0x58, 0x54, 0x79, 0x70, 0x65, 0x12, 0x07, 0x0a,
	0x03, 0x50, 0x58, 0x33, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x50, 0x58, 0x34, 0x10, 0x01, 0x12,
	0x09, 0x0a, 0x05, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x10, 0x02, 0x12, 0x07, 0x0a, 0x03, 0x4d, 0x4f,
	0x45, 0x10, 0x03, 0x12, 0x07, 0x0a, 0x03, 0x4d, 0x4d, 0x45, 0x10, 0x04, 0x12, 0x06, 0x0a, 0x02,
	0x52, 0x45, 0x10, 0x05, 0x12, 0x07, 0x0a, 0x03, 0x55, 0x41, 0x45, 0x10, 0x06, 0x12, 0x07, 0x0a,
	0x03, 0x42, 0x52, 0x45, 0x10, 0x07, 0x12, 0x0b, 0x0a, 0x07, 0x48, 0x43, 0x41, 0x50, 0x4c, 0x4f,
	0x57, 0x10, 0x08, 0x12, 0x0c, 0x0a, 0x08, 0x48, 0x43, 0x41, 0x50, 0x48, 0x49, 0x47, 0x48, 0x10,
	0x09, 0x12, 0x09, 0x0a, 0x05, 0x52, 0x45, 0x43, 0x41, 0x50, 0x10, 0x0a, 0x12, 0x08, 0x0a, 0x04,
	0x50, 0x58, 0x33, 0x34, 0x10, 0x0b, 0x32, 0x73, 0x0a, 0x0a, 0x50, 0x65, 0x72, 0x69, 0x6d, 0x65,
	0x74, 0x65, 0x72, 0x58, 0x12, 0x32, 0x0a, 0x03, 0x50, 0x58, 0x32, 0x12, 0x16, 0x2e, 0x70, 0x65,
	0x72, 0x69, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x78, 0x2e, 0x50, 0x58, 0x32, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x70, 0x65, 0x72, 0x69, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x78,
	0x2e, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x31, 0x0a, 0x03, 0x50, 0x58, 0x33, 0x12,
	0x15, 0x2e, 0x70, 0x65, 0x72, 0x69, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x78, 0x2e, 0x50, 0x58, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x70, 0x65, 0x72, 0x69, 0x6d, 0x65, 0x74,
	0x65, 0x72, 0x78, 0x2e, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x42, 0x11, 0x5a, 0x0f, 0x6d,
	0x61, 0x69, 0x6e, 0x2f, 0x70, 0x65, 0x72, 0x69, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x78, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_PerimeterX_proto_rawDescOnce sync.Once
	file_PerimeterX_proto_rawDescData = file_PerimeterX_proto_rawDesc
)

func file_PerimeterX_proto_rawDescGZIP() []byte {
	file_PerimeterX_proto_rawDescOnce.Do(func() {
		file_PerimeterX_proto_rawDescData = protoimpl.X.CompressGZIP(file_PerimeterX_proto_rawDescData)
	})
	return file_PerimeterX_proto_rawDescData
}

var file_PerimeterX_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_PerimeterX_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_PerimeterX_proto_goTypes = []interface{}{
	(SITE)(0),          // 0: perimeterx.SITE
	(PXType)(0),        // 1: perimeterx.PXType
	(*Payload)(nil),    // 2: perimeterx.Payload
	(*PX2Request)(nil), // 3: perimeterx.PX2Request
	(*PXRequest)(nil),  // 4: perimeterx.PXRequest
}
var file_PerimeterX_proto_depIdxs = []int32{
	0, // 0: perimeterx.PX2Request.Site:type_name -> perimeterx.SITE
	0, // 1: perimeterx.PXRequest.Site:type_name -> perimeterx.SITE
	1, // 2: perimeterx.PXRequest.Type:type_name -> perimeterx.PXType
	3, // 3: perimeterx.PerimeterX.PX2:input_type -> perimeterx.PX2Request
	4, // 4: perimeterx.PerimeterX.PX3:input_type -> perimeterx.PXRequest
	2, // 5: perimeterx.PerimeterX.PX2:output_type -> perimeterx.Payload
	2, // 6: perimeterx.PerimeterX.PX3:output_type -> perimeterx.Payload
	5, // [5:7] is the sub-list for method output_type
	3, // [3:5] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_PerimeterX_proto_init() }
func file_PerimeterX_proto_init() {
	if File_PerimeterX_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_PerimeterX_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Payload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_PerimeterX_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PX2Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_PerimeterX_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PXRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_PerimeterX_proto_msgTypes[0].OneofWrappers = []interface{}{}
	file_PerimeterX_proto_msgTypes[1].OneofWrappers = []interface{}{}
	file_PerimeterX_proto_msgTypes[2].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_PerimeterX_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_PerimeterX_proto_goTypes,
		DependencyIndexes: file_PerimeterX_proto_depIdxs,
		EnumInfos:         file_PerimeterX_proto_enumTypes,
		MessageInfos:      file_PerimeterX_proto_msgTypes,
	}.Build()
	File_PerimeterX_proto = out.File
	file_PerimeterX_proto_rawDesc = nil
	file_PerimeterX_proto_goTypes = nil
	file_PerimeterX_proto_depIdxs = nil
}
