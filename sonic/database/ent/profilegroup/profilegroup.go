// Code generated by entc, DO NOT EDIT.

package profilegroup

import (
	"time"

	"github.com/google/uuid"
)

const (
	// Label holds the string label denoting the profilegroup type in the database.
	Label = "profile_group"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// EdgeProfiles holds the string denoting the profiles edge name in mutations.
	EdgeProfiles = "Profiles"
	// EdgeApp holds the string denoting the app edge name in mutations.
	EdgeApp = "App"
	// EdgeTask holds the string denoting the task edge name in mutations.
	EdgeTask = "Task"
	// Table holds the table name of the profilegroup in the database.
	Table = "profile_groups"
	// ProfilesTable is the table that holds the Profiles relation/edge.
	ProfilesTable = "profiles"
	// ProfilesInverseTable is the table name for the Profile entity.
	// It exists in this package in order to avoid circular dependency with the "profile" package.
	ProfilesInverseTable = "profiles"
	// ProfilesColumn is the table column denoting the Profiles relation/edge.
	ProfilesColumn = "profile_group_profiles"
	// AppTable is the table that holds the App relation/edge. The primary key declared below.
	AppTable = "app_ProfileGroups"
	// AppInverseTable is the table name for the App entity.
	// It exists in this package in order to avoid circular dependency with the "app" package.
	AppInverseTable = "apps"
	// TaskTable is the table that holds the Task relation/edge. The primary key declared below.
	TaskTable = "task_ProfileGroup"
	// TaskInverseTable is the table name for the Task entity.
	// It exists in this package in order to avoid circular dependency with the "task" package.
	TaskInverseTable = "tasks"
)

// Columns holds all SQL columns for profilegroup fields.
var Columns = []string{
	FieldID,
	FieldCreatedAt,
	FieldUpdatedAt,
	FieldName,
}

var (
	// AppPrimaryKey and AppColumn2 are the table columns denoting the
	// primary key for the App relation (M2M).
	AppPrimaryKey = []string{"app_id", "profile_group_id"}
	// TaskPrimaryKey and TaskColumn2 are the table columns denoting the
	// primary key for the Task relation (M2M).
	TaskPrimaryKey = []string{"task_id", "profile_group_id"}
)

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() time.Time
	// DefaultUpdatedAt holds the default value on creation for the "updated_at" field.
	DefaultUpdatedAt func() time.Time
	// UpdateDefaultUpdatedAt holds the default value on update for the "updated_at" field.
	UpdateDefaultUpdatedAt func() time.Time
	// DefaultID holds the default value on creation for the "id" field.
	DefaultID func() uuid.UUID
)
