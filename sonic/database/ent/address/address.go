// Code generated by entc, DO NOT EDIT.

package address

import (
	"time"

	"github.com/google/uuid"
)

const (
	// Label holds the string label denoting the address type in the database.
	Label = "address"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// FieldAddressLine holds the string denoting the addressline field in the database.
	FieldAddressLine = "address_line"
	// FieldAddressLine2 holds the string denoting the addressline2 field in the database.
	FieldAddressLine2 = "address_line2"
	// FieldCountry holds the string denoting the country field in the database.
	FieldCountry = "country"
	// FieldState holds the string denoting the state field in the database.
	FieldState = "state"
	// FieldCity holds the string denoting the city field in the database.
	FieldCity = "city"
	// FieldZIP holds the string denoting the zip field in the database.
	FieldZIP = "zip"
	// FieldStateCode holds the string denoting the statecode field in the database.
	FieldStateCode = "state_code"
	// EdgeShippingAddress holds the string denoting the shippingaddress edge name in mutations.
	EdgeShippingAddress = "ShippingAddress"
	// EdgeBillingAddress holds the string denoting the billingaddress edge name in mutations.
	EdgeBillingAddress = "BillingAddress"
	// Table holds the table name of the address in the database.
	Table = "addresses"
	// ShippingAddressTable is the table that holds the ShippingAddress relation/edge.
	ShippingAddressTable = "addresses"
	// ShippingAddressInverseTable is the table name for the Shipping entity.
	// It exists in this package in order to avoid circular dependency with the "shipping" package.
	ShippingAddressInverseTable = "shippings"
	// ShippingAddressColumn is the table column denoting the ShippingAddress relation/edge.
	ShippingAddressColumn = "shipping_shipping_address"
	// BillingAddressTable is the table that holds the BillingAddress relation/edge. The primary key declared below.
	BillingAddressTable = "shipping_BillingAddress"
	// BillingAddressInverseTable is the table name for the Shipping entity.
	// It exists in this package in order to avoid circular dependency with the "shipping" package.
	BillingAddressInverseTable = "shippings"
)

// Columns holds all SQL columns for address fields.
var Columns = []string{
	FieldID,
	FieldCreatedAt,
	FieldUpdatedAt,
	FieldAddressLine,
	FieldAddressLine2,
	FieldCountry,
	FieldState,
	FieldCity,
	FieldZIP,
	FieldStateCode,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "addresses"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"shipping_shipping_address",
}

var (
	// BillingAddressPrimaryKey and BillingAddressColumn2 are the table columns denoting the
	// primary key for the BillingAddress relation (M2M).
	BillingAddressPrimaryKey = []string{"shipping_id", "address_id"}
)

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() time.Time
	// DefaultUpdatedAt holds the default value on creation for the "updated_at" field.
	DefaultUpdatedAt func() time.Time
	// UpdateDefaultUpdatedAt holds the default value on update for the "updated_at" field.
	UpdateDefaultUpdatedAt func() time.Time
	// DefaultID holds the default value on creation for the "id" field.
	DefaultID func() uuid.UUID
)
