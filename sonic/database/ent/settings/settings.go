// Code generated by entc, DO NOT EDIT.

package settings

import (
	"time"

	"github.com/google/uuid"
)

const (
	// Label holds the string label denoting the settings type in the database.
	Label = "settings"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// FieldSuccessWebhook holds the string denoting the successwebhook field in the database.
	FieldSuccessWebhook = "success_webhook"
	// FieldDeclineWebhook holds the string denoting the declinewebhook field in the database.
	FieldDeclineWebhook = "decline_webhook"
	// FieldCheckoutDelay holds the string denoting the checkoutdelay field in the database.
	FieldCheckoutDelay = "checkout_delay"
	// FieldATCDelay holds the string denoting the atcdelay field in the database.
	FieldATCDelay = "atc_delay"
	// EdgeApp holds the string denoting the app edge name in mutations.
	EdgeApp = "App"
	// Table holds the table name of the settings in the database.
	Table = "settings"
	// AppTable is the table that holds the App relation/edge.
	AppTable = "settings"
	// AppInverseTable is the table name for the App entity.
	// It exists in this package in order to avoid circular dependency with the "app" package.
	AppInverseTable = "apps"
	// AppColumn is the table column denoting the App relation/edge.
	AppColumn = "app_settings"
)

// Columns holds all SQL columns for settings fields.
var Columns = []string{
	FieldID,
	FieldCreatedAt,
	FieldUpdatedAt,
	FieldSuccessWebhook,
	FieldDeclineWebhook,
	FieldCheckoutDelay,
	FieldATCDelay,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "settings"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"app_settings",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() time.Time
	// DefaultUpdatedAt holds the default value on creation for the "updated_at" field.
	DefaultUpdatedAt func() time.Time
	// UpdateDefaultUpdatedAt holds the default value on update for the "updated_at" field.
	UpdateDefaultUpdatedAt func() time.Time
	// DefaultSuccessWebhook holds the default value on creation for the "SuccessWebhook" field.
	DefaultSuccessWebhook string
	// DefaultDeclineWebhook holds the default value on creation for the "DeclineWebhook" field.
	DefaultDeclineWebhook string
	// DefaultCheckoutDelay holds the default value on creation for the "CheckoutDelay" field.
	DefaultCheckoutDelay int32
	// DefaultATCDelay holds the default value on creation for the "ATCDelay" field.
	DefaultATCDelay int32
	// DefaultID holds the default value on creation for the "id" field.
	DefaultID func() uuid.UUID
)
