// Code generated by entc, DO NOT EDIT.

package shipping

import (
	"time"

	"github.com/google/uuid"
)

const (
	// Label holds the string label denoting the shipping type in the database.
	Label = "shipping"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// FieldFirstName holds the string denoting the firstname field in the database.
	FieldFirstName = "first_name"
	// FieldLastName holds the string denoting the lastname field in the database.
	FieldLastName = "last_name"
	// FieldPhoneNumber holds the string denoting the phonenumber field in the database.
	FieldPhoneNumber = "phone_number"
	// FieldBillingIsShipping holds the string denoting the billingisshipping field in the database.
	FieldBillingIsShipping = "billing_is_shipping"
	// EdgeProfile holds the string denoting the profile edge name in mutations.
	EdgeProfile = "Profile"
	// EdgeShippingAddress holds the string denoting the shippingaddress edge name in mutations.
	EdgeShippingAddress = "ShippingAddress"
	// EdgeBillingAddress holds the string denoting the billingaddress edge name in mutations.
	EdgeBillingAddress = "BillingAddress"
	// Table holds the table name of the shipping in the database.
	Table = "shippings"
	// ProfileTable is the table that holds the Profile relation/edge.
	ProfileTable = "shippings"
	// ProfileInverseTable is the table name for the Profile entity.
	// It exists in this package in order to avoid circular dependency with the "profile" package.
	ProfileInverseTable = "profiles"
	// ProfileColumn is the table column denoting the Profile relation/edge.
	ProfileColumn = "profile_shipping"
	// ShippingAddressTable is the table that holds the ShippingAddress relation/edge.
	ShippingAddressTable = "addresses"
	// ShippingAddressInverseTable is the table name for the Address entity.
	// It exists in this package in order to avoid circular dependency with the "address" package.
	ShippingAddressInverseTable = "addresses"
	// ShippingAddressColumn is the table column denoting the ShippingAddress relation/edge.
	ShippingAddressColumn = "shipping_shipping_address"
	// BillingAddressTable is the table that holds the BillingAddress relation/edge.
	BillingAddressTable = "addresses"
	// BillingAddressInverseTable is the table name for the Address entity.
	// It exists in this package in order to avoid circular dependency with the "address" package.
	BillingAddressInverseTable = "addresses"
	// BillingAddressColumn is the table column denoting the BillingAddress relation/edge.
	BillingAddressColumn = "shipping_billing_address"
)

// Columns holds all SQL columns for shipping fields.
var Columns = []string{
	FieldID,
	FieldCreatedAt,
	FieldUpdatedAt,
	FieldFirstName,
	FieldLastName,
	FieldPhoneNumber,
	FieldBillingIsShipping,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "shippings"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"profile_shipping",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() time.Time
	// DefaultUpdatedAt holds the default value on creation for the "updated_at" field.
	DefaultUpdatedAt func() time.Time
	// UpdateDefaultUpdatedAt holds the default value on update for the "updated_at" field.
	UpdateDefaultUpdatedAt func() time.Time
	// DefaultID holds the default value on creation for the "id" field.
	DefaultID func() uuid.UUID
)
