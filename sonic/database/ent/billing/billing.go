// Code generated by entc, DO NOT EDIT.

package billing

import (
	"time"

	"github.com/google/uuid"
)

const (
	// Label holds the string label denoting the billing type in the database.
	Label = "billing"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// FieldCardholderName holds the string denoting the cardholdername field in the database.
	FieldCardholderName = "cardholder_name"
	// FieldCardNumber holds the string denoting the cardnumber field in the database.
	FieldCardNumber = "card_number"
	// FieldExpiryMonth holds the string denoting the expirymonth field in the database.
	FieldExpiryMonth = "expiry_month"
	// FieldExpiryYear holds the string denoting the expiryyear field in the database.
	FieldExpiryYear = "expiry_year"
	// FieldCVV holds the string denoting the cvv field in the database.
	FieldCVV = "cvv"
	// EdgeProfile holds the string denoting the profile edge name in mutations.
	EdgeProfile = "Profile"
	// Table holds the table name of the billing in the database.
	Table = "billings"
	// ProfileTable is the table that holds the Profile relation/edge. The primary key declared below.
	ProfileTable = "profile_Billing"
	// ProfileInverseTable is the table name for the Profile entity.
	// It exists in this package in order to avoid circular dependency with the "profile" package.
	ProfileInverseTable = "profiles"
)

// Columns holds all SQL columns for billing fields.
var Columns = []string{
	FieldID,
	FieldCreatedAt,
	FieldUpdatedAt,
	FieldCardholderName,
	FieldCardNumber,
	FieldExpiryMonth,
	FieldExpiryYear,
	FieldCVV,
}

var (
	// ProfilePrimaryKey and ProfileColumn2 are the table columns denoting the
	// primary key for the Profile relation (M2M).
	ProfilePrimaryKey = []string{"profile_id", "billing_id"}
)

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() time.Time
	// DefaultUpdatedAt holds the default value on creation for the "updated_at" field.
	DefaultUpdatedAt func() time.Time
	// UpdateDefaultUpdatedAt holds the default value on update for the "updated_at" field.
	UpdateDefaultUpdatedAt func() time.Time
	// DefaultID holds the default value on creation for the "id" field.
	DefaultID func() uuid.UUID
)
