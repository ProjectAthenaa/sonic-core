// Code generated by entc, DO NOT EDIT.

package checkout

import (
	"time"

	"github.com/google/uuid"
)

const (
	// Label holds the string label denoting the checkout type in the database.
	Label = "checkout"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldDate holds the string denoting the date field in the database.
	FieldDate = "date"
	// FieldProductName holds the string denoting the productname field in the database.
	FieldProductName = "product_name"
	// FieldProductPrice holds the string denoting the productprice field in the database.
	FieldProductPrice = "product_price"
	// FieldProductImage holds the string denoting the productimage field in the database.
	FieldProductImage = "product_image"
	// EdgeUser holds the string denoting the user edge name in mutations.
	EdgeUser = "User"
	// Table holds the table name of the checkout in the database.
	Table = "checkouts"
	// UserTable is the table that holds the User relation/edge.
	UserTable = "checkouts"
	// UserInverseTable is the table name for the User entity.
	// It exists in this package in order to avoid circular dependency with the "user" package.
	UserInverseTable = "users"
	// UserColumn is the table column denoting the User relation/edge.
	UserColumn = "user_checkouts"
)

// Columns holds all SQL columns for checkout fields.
var Columns = []string{
	FieldID,
	FieldDate,
	FieldProductName,
	FieldProductPrice,
	FieldProductImage,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "checkouts"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"user_checkouts",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultDate holds the default value on creation for the "Date" field.
	DefaultDate func() time.Time
	// DefaultProductName holds the default value on creation for the "ProductName" field.
	DefaultProductName string
	// DefaultProductPrice holds the default value on creation for the "ProductPrice" field.
	DefaultProductPrice float64
	// DefaultProductImage holds the default value on creation for the "ProductImage" field.
	DefaultProductImage string
	// DefaultID holds the default value on creation for the "id" field.
	DefaultID func() uuid.UUID
)
