// Code generated by entc, DO NOT EDIT.

package profile

import (
	"time"

	"github.com/google/uuid"
)

const (
	// Label holds the string label denoting the profile type in the database.
	Label = "profile"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// FieldEmail holds the string denoting the email field in the database.
	FieldEmail = "email"
	// EdgeProfileGroup holds the string denoting the profilegroup edge name in mutations.
	EdgeProfileGroup = "ProfileGroup"
	// EdgeShipping holds the string denoting the shipping edge name in mutations.
	EdgeShipping = "Shipping"
	// EdgeBilling holds the string denoting the billing edge name in mutations.
	EdgeBilling = "Billing"
	// Table holds the table name of the profile in the database.
	Table = "profiles"
	// ProfileGroupTable is the table that holds the ProfileGroup relation/edge.
	ProfileGroupTable = "profiles"
	// ProfileGroupInverseTable is the table name for the ProfileGroup entity.
	// It exists in this package in order to avoid circular dependency with the "profilegroup" package.
	ProfileGroupInverseTable = "profile_groups"
	// ProfileGroupColumn is the table column denoting the ProfileGroup relation/edge.
	ProfileGroupColumn = "profile_group_profiles"
	// ShippingTable is the table that holds the Shipping relation/edge.
	ShippingTable = "shippings"
	// ShippingInverseTable is the table name for the Shipping entity.
	// It exists in this package in order to avoid circular dependency with the "shipping" package.
	ShippingInverseTable = "shippings"
	// ShippingColumn is the table column denoting the Shipping relation/edge.
	ShippingColumn = "profile_shipping"
	// BillingTable is the table that holds the Billing relation/edge. The primary key declared below.
	BillingTable = "profile_Billing"
	// BillingInverseTable is the table name for the Billing entity.
	// It exists in this package in order to avoid circular dependency with the "billing" package.
	BillingInverseTable = "billings"
)

// Columns holds all SQL columns for profile fields.
var Columns = []string{
	FieldID,
	FieldCreatedAt,
	FieldUpdatedAt,
	FieldName,
	FieldEmail,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "profiles"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"profile_group_profiles",
}

var (
	// BillingPrimaryKey and BillingColumn2 are the table columns denoting the
	// primary key for the Billing relation (M2M).
	BillingPrimaryKey = []string{"profile_id", "billing_id"}
)

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() time.Time
	// DefaultUpdatedAt holds the default value on creation for the "updated_at" field.
	DefaultUpdatedAt func() time.Time
	// UpdateDefaultUpdatedAt holds the default value on update for the "updated_at" field.
	UpdateDefaultUpdatedAt func() time.Time
	// DefaultID holds the default value on creation for the "id" field.
	DefaultID func() uuid.UUID
)
