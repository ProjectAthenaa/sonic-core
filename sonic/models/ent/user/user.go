// Code generated by entc, DO NOT EDIT.

package user

const (
	// Label holds the string label denoting the user type in the database.
	Label = "user"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldDisabled holds the string denoting the disabled field in the database.
	FieldDisabled = "disabled"
	// EdgeLicense holds the string denoting the license edge name in mutations.
	EdgeLicense = "License"
	// EdgeStatistics holds the string denoting the statistics edge name in mutations.
	EdgeStatistics = "Statistics"
	// EdgeApp holds the string denoting the app edge name in mutations.
	EdgeApp = "App"
	// Table holds the table name of the user in the database.
	Table = "users"
	// LicenseTable is the table the holds the License relation/edge.
	LicenseTable = "licenses"
	// LicenseInverseTable is the table name for the License entity.
	// It exists in this package in order to avoid circular dependency with the "license" package.
	LicenseInverseTable = "licenses"
	// LicenseColumn is the table column denoting the License relation/edge.
	LicenseColumn = "user_license"
	// StatisticsTable is the table the holds the Statistics relation/edge. The primary key declared below.
	StatisticsTable = "user_Statistics"
	// StatisticsInverseTable is the table name for the Statistic entity.
	// It exists in this package in order to avoid circular dependency with the "statistic" package.
	StatisticsInverseTable = "statistics"
	// AppTable is the table the holds the App relation/edge.
	AppTable = "apps"
	// AppInverseTable is the table name for the App entity.
	// It exists in this package in order to avoid circular dependency with the "app" package.
	AppInverseTable = "apps"
	// AppColumn is the table column denoting the App relation/edge.
	AppColumn = "user_app"
)

// Columns holds all SQL columns for user fields.
var Columns = []string{
	FieldID,
	FieldDisabled,
}

var (
	// StatisticsPrimaryKey and StatisticsColumn2 are the table columns denoting the
	// primary key for the Statistics relation (M2M).
	StatisticsPrimaryKey = []string{"user_id", "statistic_id"}
)

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}
