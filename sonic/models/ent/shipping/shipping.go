// Code generated by entc, DO NOT EDIT.

package shipping

const (
	// Label holds the string label denoting the shipping type in the database.
	Label = "shipping"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldFirstName holds the string denoting the firstname field in the database.
	FieldFirstName = "first_name"
	// FieldLastName holds the string denoting the lastname field in the database.
	FieldLastName = "last_name"
	// FieldPhoneNumber holds the string denoting the phonenumber field in the database.
	FieldPhoneNumber = "phone_number"
	// FieldBillingIsShipping holds the string denoting the billingisshipping field in the database.
	FieldBillingIsShipping = "billing_is_shipping"
	// EdgeProfile holds the string denoting the profile edge name in mutations.
	EdgeProfile = "Profile"
	// EdgeShippingAddress holds the string denoting the shippingaddress edge name in mutations.
	EdgeShippingAddress = "ShippingAddress"
	// EdgeBillingAddress holds the string denoting the billingaddress edge name in mutations.
	EdgeBillingAddress = "BillingAddress"
	// Table holds the table name of the shipping in the database.
	Table = "shippings"
	// ProfileTable is the table the holds the Profile relation/edge.
	ProfileTable = "shippings"
	// ProfileInverseTable is the table name for the Profile entity.
	// It exists in this package in order to avoid circular dependency with the "profile" package.
	ProfileInverseTable = "profiles"
	// ProfileColumn is the table column denoting the Profile relation/edge.
	ProfileColumn = "profile_shipping"
	// ShippingAddressTable is the table the holds the ShippingAddress relation/edge. The primary key declared below.
	ShippingAddressTable = "shipping_ShippingAddress"
	// ShippingAddressInverseTable is the table name for the Address entity.
	// It exists in this package in order to avoid circular dependency with the "address" package.
	ShippingAddressInverseTable = "addresses"
	// BillingAddressTable is the table the holds the BillingAddress relation/edge. The primary key declared below.
	BillingAddressTable = "shipping_BillingAddress"
	// BillingAddressInverseTable is the table name for the Address entity.
	// It exists in this package in order to avoid circular dependency with the "address" package.
	BillingAddressInverseTable = "addresses"
)

// Columns holds all SQL columns for shipping fields.
var Columns = []string{
	FieldID,
	FieldFirstName,
	FieldLastName,
	FieldPhoneNumber,
	FieldBillingIsShipping,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "shippings"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"profile_shipping",
}

var (
	// ShippingAddressPrimaryKey and ShippingAddressColumn2 are the table columns denoting the
	// primary key for the ShippingAddress relation (M2M).
	ShippingAddressPrimaryKey = []string{"shipping_id", "address_id"}
	// BillingAddressPrimaryKey and BillingAddressColumn2 are the table columns denoting the
	// primary key for the BillingAddress relation (M2M).
	BillingAddressPrimaryKey = []string{"shipping_id", "address_id"}
)

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}
