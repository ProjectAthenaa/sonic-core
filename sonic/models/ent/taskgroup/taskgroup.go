// Code generated by entc, DO NOT EDIT.

package taskgroup

const (
	// Label holds the string label denoting the taskgroup type in the database.
	Label = "task_group"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// EdgeApp holds the string denoting the app edge name in mutations.
	EdgeApp = "App"
	// EdgeTasks holds the string denoting the tasks edge name in mutations.
	EdgeTasks = "Tasks"
	// Table holds the table name of the taskgroup in the database.
	Table = "task_groups"
	// AppTable is the table the holds the App relation/edge. The primary key declared below.
	AppTable = "app_TaskGroups"
	// AppInverseTable is the table name for the App entity.
	// It exists in this package in order to avoid circular dependency with the "app" package.
	AppInverseTable = "apps"
	// TasksTable is the table the holds the Tasks relation/edge. The primary key declared below.
	TasksTable = "task_group_Tasks"
	// TasksInverseTable is the table name for the Task entity.
	// It exists in this package in order to avoid circular dependency with the "task" package.
	TasksInverseTable = "tasks"
)

// Columns holds all SQL columns for taskgroup fields.
var Columns = []string{
	FieldID,
	FieldName,
}

var (
	// AppPrimaryKey and AppColumn2 are the table columns denoting the
	// primary key for the App relation (M2M).
	AppPrimaryKey = []string{"app_id", "task_group_id"}
	// TasksPrimaryKey and TasksColumn2 are the table columns denoting the
	// primary key for the Tasks relation (M2M).
	TasksPrimaryKey = []string{"task_group_id", "task_id"}
)

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}
